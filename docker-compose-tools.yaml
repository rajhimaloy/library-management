version: '3.9'

networks:
  micro-app-net:
    name: my-micro-app-net
    #driver: overlay
    driver: bridge

volumes:
  pg-lmsDB-storage:
  pgadmin-lmsDB-data:
  #pg-notifyDB-storage:
  redis-inmemory-storage:

services:
  app:
    build: .
    environment:
      DB_HOST: pg-lmsDB
      DB_PORT: 5432
      DB_NAME: lmsDB
      DB_USER: root
      DB_PASSWORD: root@123
      SPRING_PROFILES_ACTIVE: dev
    ports:
      - 8080:8080
    depends_on:
      - pg-lmsDB

  pg-lmsDB:
    image: postgres:latest
    container_name: pg-lmsDB-container
    restart: always
    environment:
      POSTGRES_DB: lmsDB
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root@123
    ports:
      - 5432:5432
    networks:
      - micro-app-net
    volumes:
      - pg-lmsDB-storage:/var/lib/postgresql/data

  pgadmin-lmsDB:
    image: dpage/pgadmin4
    container_name: pgadmin-lmsDB-container
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: root@mypage.com
      PGADMIN_DEFAULT_PASSWORD: root@123
    volumes:
      - pgadmin-lmsDB-data:/var/lib/pgadmin
    restart: on-failure
    networks:
      - micro-app-net
    depends_on:
      - pg-lmsDB

  redis:
    image: redis:latest
    #command: '--requirepass root@123'
    container_name: redis-lmsDB-container
    ports:
      - 6379:6379
    networks:
      - micro-app-net
    volumes:
      - redis-inmemory-storage:/data

  mongodb:
    image: 'mongo:latest'
    environment:
      - 'MONGO_INITDB_DATABASE=lmsDB'
      - 'MONGO_INITDB_ROOT_USERNAME=root'
      - 'MONGO_INITDB_ROOT_PASSWORD=root@123'
    ports:
      - '27017'

    #end of scripts
    # docker-compose -f docker-compose-tools.yaml up -d
    # docker-compose -f docker-compose-tools.yaml down
    # docker ps
    # docker run --name postgres-container -e POSTGRES_USER=your_db_username -e POSTGRES_PASSWORD=root@123 -e POSTGRES_DB=lmsDB -p 5432:5432 -d postgres

    # Postgress
    # docker exec -it pg-lmsDB-container psql -U root -d lmsDB
    # To Create a Database in Commandline
    # lmsDB=# CREATE DATABASE lmsDB;
    # To List all Database
    # lmsDB=# \l
    # Connect to the New Database
    # lmsDB=# \c lmsDB
    # lmsDB=# \c lmsDB
    # Create Borrower table
    # lmsDB=# CREATE TABLE LMS_BORROWER (borrower_id SERIAL PRIMARY KEY, name VARCHAR(100) NOT NULL, email VARCHAR(100) NOT NULL, status VARCHAR(20) NOT NULL);
    # Verify the table:
    # lmsDB=# \dt
    # Select Query to Table
    # lmsDB=# SELECT * FROM LMS_BORROWER;
    # To exit the PostgreSQL command-line tool:
    # lmsDB=# \q

    # Alternative: Create Database directly from the command line Without Entering psql
    # createdb -U postgres lmsDB
    # For Docker:
    # docker exec -it postgres-container createdb -U root lmsDB



# Open Adminer: http://localhost:5050
#Login Credentials:
#    System: PostgreSQL
#    Server: postgres (use container name, not localhost)
#    Username: root
#    Password: root@123
#    Database: lmsDB
#    PGADMIN_DEFAULT_EMAIL: root@mypage.com
#    PGADMIN_DEFAULT_PASSWORD: root@123